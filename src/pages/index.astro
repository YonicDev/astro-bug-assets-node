---
import { Image, getImage } from 'astro:assets';

import Dog from '../assets/dog.jpg'
import Cat from '../assets/cat.jpg'
import DogCat from '../assets/dog-cat.png'

import Layout from '../layouts/Layout.astro';

const CatPic = await getImage({src: Cat, width: 600, quality: 70, format: "avif"})
const CatPicWebp = await getImage({src: Cat, width: 600, quality: 80, format: "webp"})
const CatPicJpg = await getImage({src: Cat, width: 600, quality: 80, format: "jpg"})

---

<Layout title="Welcome to Astro.">
	<main>
		<h1>Can you see the images?</h1>
		<center>
			<p>If you can see them, great!</p>
			<Image src={Dog} alt="You can't see the dog :(" width={600} />
			<picture>
				<source srcset={CatPic.src} type="image/avif" />
				<source srcset={CatPicWebp.src} type="image/webp" />
				<img src={CatPicJpg.src} alt="You can't see the cat :/" width={600} />
			</picture>
			<img src={DogCat.src} alt="You can't see the dog-cat" width={600} />
			<img src="/control.png" alt="This is a control image that should be displayed at all times" width={600} height={300} />
		</center>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
